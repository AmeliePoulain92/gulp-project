{"version":3,"sources":["assets/_reset.scss","assets/_fonts.scss","assets/settings-assets/_font-face.scss","assets/_sprite-png.scss","assets/_sprite-svg.scss"],"names":[],"mappings":"AAAA,kBAAkB;AAElB;EACI,+BAA+B;EAC/B,4BAA4B;EAC5B,uBAAuB,EAC1B;;AAED;;;EAGI,4BAA4B;EAC5B,yBAAyB;EACzB,oBAAoB,EACvB;;AAED;;EAEI,UAAU,EACb;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgFI,cAAc;EACd,gBAAgB;EAChB,UAAU;EACV,WAAW;EACX,yBAAyB;EACzB,UAAU,EACb;;AAED;;;;;;;;;;;;EAYI,eAAe,EAClB;;AAED;EACI,aAAa;EACb,0CAA0C;EAC1C,eAAe;EACf,YAAY,EACf;;AAED;;;;;;EAMI,kBAAkB;EAClB,iBAAiB,EACpB;;AAED;EACI,eAAe,EAClB;;AAED;EACI,iBAAiB,EACpB;;AAED;EACI,kBAAkB,EACrB;;AAED;EACI,kBAAkB,EACrB;;AAED;EACI,kBAAkB,EACrB;;AAED;EACI,kBAAkB,EACrB;;AAED;;;EAGI,YAAY;EACZ,cAAc,EACjB;;AAED;EACI,oBAAoB,EACvB;;AAED;EACI,oBAAoB;EACpB,WAAW,EACd;;AAED;EACI,gBAAgB;EAChB,mBAAmB;EACnB,cAAc,EACjB;;AAED;;;;EAII,cAAc,EACjB;;AAED;;EAEI,UAAU,EACb;;AAED;EAEQ,cAAc,EACjB;;AAGL;;EAEI,yBAAiB;EAAjB,sBAAiB;EAAjB,iBAAiB;EAEjB,yBAAyB;EACzB,sBAAsB;EACtB,iBAAiB,EACpB;;AAED;;;;EAII,cAAc,EACjB;;AAED;EACI,eAAe;EACf,aAAa,EAChB;;AAED;EACI,kBAAkB,EACrB;;AAED;;EAEI,gBAAgB,EACnB;;AAED;EACI,kBAAkB;EAClB,0BAA0B,EAC7B;;AAED;EACI,aAAa,EAChB;;AAED;EACI,YAAY,EACf;;AAED;EACI,mBAAmB,EACtB;;AAED,iBAAiB;AC1PjB,SAAS;ACDL;EACI,qCAAgC;EAEhC,mFAAQ;EACR,kaAGgF,EAAA;;ADFxF,aAAa;AENb;;;;;;;;;;;;EAYE;AAwCF;;;;;;;;;;;;;;;;;;;;;;;;;EAyBE;AA2BF;;;;;EAKE;AC7GF;EACI,gBAAgB,EACnB;;AAED;EACI,aAAY;EACZ,uBAAsB;EACtB,sBAAsB;EACtB,2CAAqB;EACrB,6BAA6B;EAC7B,0CAAkC;EAAlC,uCAAkC;EAAlC,qCAAkC;EAAlC,kCAAkC,EACrC;;AAED;EACI,uCAAqB,EACxB;;AAIC;EACI,6BAA6B;EAC7B,iBAAiB;EACjB,kBAAkB,EACrB;;AAKD;EACI,iCAAiC;EACjC,iBAAiB;EACjB,kBAAkB,EACrB","file":"assets.css","sourcesContent":["/* myReset:Start*/\r\n\r\nhtml {\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n}\r\n\r\n*,\r\n*:before,\r\n*:after {\r\n    -webkit-box-sizing: inherit;\r\n    -moz-box-sizing: inherit;\r\n    box-sizing: inherit;\r\n}\r\n\r\ninput::-moz-focus-inner,\r\nbutton::-moz-focus-inner {\r\n    border: 0;\r\n}\r\n\r\nhtml,\r\nbody,\r\ndiv,\r\nspan,\r\napplet,\r\nobject,\r\niframe,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\np,\r\nblockquote,\r\npre,\r\na,\r\nabbr,\r\nacronym,\r\naddress,\r\nbig,\r\ncite,\r\ncode,\r\ndel,\r\ndfn,\r\nem,\r\nimg,\r\nins,\r\nkbd,\r\nq,\r\ns,\r\nsamp,\r\nsmall,\r\nstrike,\r\nstrong,\r\ntt,\r\nvar,\r\nb,\r\nu,\r\ni,\r\ncenter,\r\ndl,\r\ndt,\r\ndd,\r\nol,\r\nul,\r\nli,\r\nfieldset,\r\nform,\r\nbutton,\r\nlabel,\r\nlegend,\r\ntable,\r\ncaption,\r\ntbody,\r\ntfoot,\r\nthead,\r\ntr,\r\nth,\r\ntd,\r\narticle,\r\naside,\r\ncanvas,\r\ndetails,\r\nembed,\r\nfigure,\r\nfigcaption,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\noutput,\r\nruby,\r\nsection,\r\nsummary,\r\ntime,\r\nmark,\r\naudio,\r\nvideo {\r\n    font: inherit;\r\n    font-size: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    vertical-align: baseline;\r\n    border: 0;\r\n}\r\n\r\nmain,\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\nsection {\r\n    display: block;\r\n}\r\n\r\nbody {\r\n    height: 100%;\r\n    font: normal 100% Cambria, Georgia, serif;\r\n    line-height: 1;\r\n    color: #000;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n    font-weight: bold;\r\n    margin: 0 0 20px;\r\n}\r\n\r\nh1 {\r\n    font-size: 2em;\r\n}\r\n\r\nh2 {\r\n    font-size: 1.5em;\r\n}\r\n\r\nh3 {\r\n    font-size: 1.17em;\r\n}\r\n\r\nh4 {\r\n    font-size: 1.12em;\r\n}\r\n\r\nh5 {\r\n    font-size: 0.83em;\r\n}\r\n\r\nh6 {\r\n    font-size: 0.75em;\r\n}\r\n\r\na,\r\na:hover,\r\na:focus {\r\n    color: #000;\r\n    outline: none;\r\n}\r\n\r\nul {\r\n    margin-bottom: 20px;\r\n}\r\n\r\np {\r\n    margin-bottom: 20px;\r\n    padding: 0;\r\n}\r\n\r\nimg {\r\n    max-width: 100%;\r\n    border-style: none;\r\n    outline: none;\r\n}\r\n\r\ninput[type='search']::-webkit-search-decoration,\r\ninput[type='search']::-webkit-search-cancel-button,\r\ninput[type='search']::-webkit-search-results-button,\r\ninput[type='search']::-webkit-search-results-decoration {\r\n    display: none;\r\n}\r\n\r\ninput::-moz-focus-inner,\r\nbutton::-moz-focus-inner {\r\n    border: 0;\r\n}\r\n\r\ninput {\r\n    &::-ms-clear {\r\n        display: none;\r\n    }\r\n}\r\n\r\ninput,\r\nbutton {\r\n    border-radius: 0;\r\n\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n}\r\n\r\ninput,\r\ntextarea,\r\nbutton,\r\n.slick-slide {\r\n    outline: none;\r\n}\r\n\r\ntextarea {\r\n    overflow: auto;\r\n    resize: none;\r\n}\r\n\r\nstrong {\r\n    font-weight: bold;\r\n}\r\n\r\nlabel,\r\nbutton {\r\n    cursor: pointer;\r\n}\r\n\r\ntable {\r\n    border-spacing: 0;\r\n    border-collapse: collapse;\r\n}\r\n\r\n.alignright {\r\n    float: right;\r\n}\r\n\r\n.alignleft {\r\n    float: left;\r\n}\r\n\r\n.text-center {\r\n    text-align: center;\r\n}\r\n\r\n/* END:myReset */\r\n","@import 'settings';\r\n\r\n/*fonts*/\r\n\r\n@include font-face('LifehackBasic', 'Regular');\r\n\r\n/*END:fonts*/\r\n\r\n\r\n","@mixin font-face($font, $type) {\r\n    @font-face {\r\n        font-family: '#{$font}-#{$type}';\r\n\r\n        src: url('../fonts/#{$font}/#{$font}-#{$type}/#{$font}-#{$type}.eot');\r\n        src: url('../fonts/#{$font}/#{$font}-#{$type}/#{$font}-#{$type}.eot?#iefix') format('embedded-opentype'),\r\n        url('../fonts/#{$font}/#{$font}-#{$type}/#{$font}-#{$type}.woff') format('woff'),\r\n        url('../fonts/#{$font}/#{$font}-#{$type}/#{$font}-#{$type}.ttf') format('truetype'),\r\n        url('../fonts/#{$font}/#{$font}-#{$type}/#{$font}-#{$type}.svg##{$font}') format('svg');\r\n    }\r\n}\r\n","/*\nSCSS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: $icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n$icon-home: x y offset_x offset_y width height total_width total_height image_path;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n$spritesheet: width height image $spritesheet-sprites;\n*/\n$girl-name: 'girl';\n$girl-x: 0px;\n$girl-y: 0px;\n$girl-offset-x: 0px;\n$girl-offset-y: 0px;\n$girl-width: 1024px;\n$girl-height: 1280px;\n$girl-total-width: 2249px;\n$girl-total-height: 1280px;\n$girl-image: '../img/sprite.png';\n$girl: (0px, 0px, 0px, 0px, 1024px, 1280px, 2249px, 1280px, '../img/sprite.png', 'girl', );\n$girl2-name: 'girl2';\n$girl2-x: 1824px;\n$girl2-y: 0px;\n$girl2-offset-x: -1824px;\n$girl2-offset-y: 0px;\n$girl2-width: 425px;\n$girl2-height: 640px;\n$girl2-total-width: 2249px;\n$girl2-total-height: 1280px;\n$girl2-image: '../img/sprite.png';\n$girl2: (1824px, 0px, -1824px, 0px, 425px, 640px, 2249px, 1280px, '../img/sprite.png', 'girl2', );\n$girl3-name: 'girl3';\n$girl3-x: 1024px;\n$girl3-y: 0px;\n$girl3-offset-x: -1024px;\n$girl3-offset-y: 0px;\n$girl3-width: 800px;\n$girl3-height: 1086px;\n$girl3-total-width: 2249px;\n$girl3-total-height: 1280px;\n$girl3-image: '../img/sprite.png';\n$girl3: (1024px, 0px, -1024px, 0px, 800px, 1086px, 2249px, 1280px, '../img/sprite.png', 'girl3', );\n$spritesheet-width: 2249px;\n$spritesheet-height: 1280px;\n$spritesheet-image: '../img/sprite.png';\n$spritesheet-sprites: ($girl, $girl2, $girl3, );\n$spritesheet: (2249px, 1280px, '../img/sprite.png', $spritesheet-sprites, );\n\n/*\nThe provided mixins are intended to be used with the array-like variables\n\n.icon-home {\n  @include sprite-width($icon-home);\n}\n\n.icon-email {\n  @include sprite($icon-email);\n}\n\nExample usage in HTML:\n\n`display: block` sprite:\n<div class=\"icon-home\"></div>\n\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n\n// CSS\n.icon {\n  display: inline-block;\n}\n\n// HTML\n<i class=\"icon icon-home\"></i>\n*/\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n/*\nThe `sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of SCSS\n\n@include sprites($spritesheet-sprites);\n*/\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n",".icon {\n    font-size: 10px;\n}\n\n.icon:before {\n    content:' ';\n    vertical-align:middle;\n    display: inline-block;\n    background-image: url(\"../img/sprite.svg\");\n    background-repeat: no-repeat;\n    background-size: 50.4222em 62.2em;\n}\n\n.no-svg .icon:before {\n    background-image: url(\"../sprite.png\");\n}\n\n\n\n  .icon.heart:before {\n      background-position: 0em 0em;\n      width: 50.4222em;\n      height: 50.4222em;\n  }\n\n\n\n\n  .icon.tiger:before {\n      background-position: 0em -50.5em;\n      width: 11.6667em;\n      height: 11.6667em;\n  }\n\n\n\n\n\n"],"sourceRoot":"/source/"}