/* myReset:Start*/

html {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

*,
*:before,
*:after {
    -webkit-box-sizing: inherit;
    -moz-box-sizing: inherit;
    box-sizing: inherit;
}

input::-moz-focus-inner,
button::-moz-focus-inner {
    border: 0;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
button,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
    font: inherit;
    font-size: 100%;
    margin: 0;
    padding: 0;
    vertical-align: baseline;
    border: 0;
}

main,
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
    display: block;
}

body {
    font: normal 100% Cambria, Georgia, serif;
    line-height: 1;
    height: 100%;
    color: #000;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: bold;
    margin: 0 0 20px;
}

h1 {
    font-size: 2em;
}

h2 {
    font-size: 1.5em;
}

h3 {
    font-size: 1.17em;
}

h4 {
    font-size: 1.12em;
}

h5 {
    font-size: .83em;
}

h6 {
    font-size: .75em;
}

a,
a:hover,
a:focus {
    color: #000;
    outline: none;
}

ul {
    margin-bottom: 20px;
}

p {
    margin-bottom: 20px;
    padding: 0;
}

img {
    max-width: 100%;
    border-style: none;
    outline: none;
}

input[type='search']::-webkit-search-decoration,
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-results-button,
input[type='search']::-webkit-search-results-decoration {
    display: none;
}

input::-moz-focus-inner,
button::-moz-focus-inner {
    border: 0;
}

input::-ms-clear {
    display: none;
}

input,
button {
    -webkit-border-radius: 0;
    -moz-border-radius: 0;
    border-radius: 0;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

input,
textarea,
button,
.slick-slide {
    outline: none;
}

textarea {
    overflow: auto;
    resize: none;
}

strong {
    font-weight: bold;
}

label,
button {
    cursor: pointer;
}

table {
    border-spacing: 0;
    border-collapse: collapse;
}

.alignright {
    float: right;
}

.alignleft {
    float: left;
}

.text-center {
    text-align: center;
}


/* END:myReset */


/*fonts*/

@font-face {
    font-family: 'LifehackBasic-Regular';
    src: url('../fonts/LifehackBasic/LifehackBasic-Regular/LifehackBasic-Regular.eot');
    src: url('../fonts/LifehackBasic/LifehackBasic-Regular/LifehackBasic-Regular.eot?#iefix') format('embedded-opentype'), url('../fonts/LifehackBasic/LifehackBasic-Regular/LifehackBasic-Regular.woff') format('woff'), url('../fonts/LifehackBasic/LifehackBasic-Regular/LifehackBasic-Regular.ttf') format('truetype'), url('../fonts/LifehackBasic/LifehackBasic-Regular/LifehackBasic-Regular.svg#LifehackBasic') format('svg');
}


/*END:fonts*/


/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/


/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/


/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/

.icon {
    font-size: 10px;
}

.icon:before {
    display: inline-block;
    content: ' ';
    vertical-align: middle;
    background-image: url('../img/sprite.svg');
    background-repeat: no-repeat;
    -webkit-background-size: 50.4222em 62.2em;
    -moz-background-size: 50.4222em 62.2em;
    -o-background-size: 50.4222em 62.2em;
    background-size: 50.4222em 62.2em;
}

.no-svg .icon:before {
    background-image: url('../sprite.png');
}

.icon.heart:before {
    width: 50.4222em;
    height: 50.4222em;
    background-position: 0 0;
}

.icon.tiger:before {
    width: 11.6667em;
    height: 11.6667em;
    background-position: 0 -50.5em;
}
/*# sourceMappingURL=sourcemaps/assets.css.map */
